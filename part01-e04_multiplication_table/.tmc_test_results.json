[{"name": "test.test_multiplication_table.MultiplicationTable.test_content", "status": "failed", "message": "Lists differ: [] != [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nSecond list contains 10 additional elements.\nFirst extra element 0:\n1\n\n- []\n+ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]", "passed": false, "points": ["p01-04.1"], "backtrace": ["  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 615, in run\n    testMethod()\n", "  File \"E:\\koodit\\hy-data-analysis-with-python-summer-2019\\part01-e04_multiplication_table\\test\\test_multiplication_table.py\", line 28, in test_content\n    self.assertEqual(numbers, list(range(j, 11*j, j)))\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 839, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 1045, in assertListEqual\n    self.assertSequenceEqual(list1, list2, msg, seq_type=list)\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 1027, in assertSequenceEqual\n    self.fail(msg)\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 680, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_multiplication_table.MultiplicationTable.test_lines", "status": "failed", "message": "1 != 10 : The output should contain ten lines!", "passed": false, "points": ["p01-04.1"], "backtrace": ["  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 615, in run\n    testMethod()\n", "  File \"E:\\koodit\\hy-data-analysis-with-python-summer-2019\\part01-e04_multiplication_table\\test\\test_multiplication_table.py\", line 20, in test_lines\n    self.assertEqual(len(result), 10, msg=\"The output should contain ten lines!\")\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 839, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"C:\\ProgramData\\Anaconda3\\lib\\unittest\\case.py\", line 832, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}]